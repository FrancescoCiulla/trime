apply plugin: 'com.android.application'

def countCmd = 'git rev-list develop --count'
def count = countCmd.execute().text.trim().toInteger() + 20170000
def tagCmd = 'git describe develop --tags'
def tag = tagCmd.execute().text.trim()
def date = new Date().format('yyyyMMdd')

android {
    compileSdkVersion 26
    buildToolsVersion "26.0.0"

    defaultConfig {
        applicationId "com.osfans.trime"
        minSdkVersion 14
        targetSdkVersion 26
        versionCode count
        versionName "$tag-$date"
        setProperty("archivesBaseName", "trime-$date")
        ndk {
            abiFilters "armeabi-v7a"//, "arm64-v8a"
        }
        externalNativeBuild {
            cmake {
                arguments "-DANDROID_TOOLCHAIN=clang", "-DANDROID_STL=c++_static", "-DANDROID_STL_FORCE_FEATURES=ON"
            }
        }
    }

    signingConfigs {
       release {
           storeFile rootProject.file(RELEASE_STORE_FILE)
           storePassword RELEASE_STORE_PASSWORD
           keyAlias RELEASE_KEY_ALIAS
           keyPassword RELEASE_KEY_PASSWORD
       }
    }

    buildTypes {
        release {
            minifyEnabled false
            //proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-android.txt'
            signingConfig signingConfigs.release
        }
    }

    externalNativeBuild {
        cmake {
            path "src/main/jni/CMakeLists.txt"
        }
    }

    splits {

        // Configures multiple APKs based on ABI.
        abi {

            // Enables building multiple APKs per ABI.
            enable true

            // By default all ABIs are included, so use reset() and include to specify that we only
            // want APKs for x86, armeabi-v7a, and mips.

            // Resets the list of ABIs that Gradle should create APKs for to none.
            reset()

            // Specifies a list of ABIs that Gradle should create APKs for.
            include "armeabi-v7a"//, "arm64-v8a"

            // Specifies that we do not want to also generate a universal APK that includes all ABIs.
            universalApk false
        }
    }
}
